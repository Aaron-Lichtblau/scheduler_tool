from flask import Flask, request, jsonify, session
from werkzeug.utils import secure_filename
import api.input_creator as input_creator
import api.helpers as helpers
import numpy as np
import pandas as pd
import api.default_run as default_run
import api.settings as settings
import os

app = Flask(__name__, static_folder='./build',static_url_path='/')
app.config['JSON_SORT_KEYS'] = False
app.secret_key = b'm\xb5\xe6\xef4\xb5\x02_\x8f\xe4\xffpw\xccu\xc4' # generated by os.urandom(16)

#-------------------------------------------------------------------------------
@app.route('/')
def index():
    return app.send_static_file('index.html')

#-------------------------------------------------------------------------------

@app.route('/schedule')
def get_schedule():
    return {schedule: schedule_object}

#-------------------------------------------------------------------------------

@app.route('/file', methods=['GET','POST'])
def get_slotDict():
    file = request.files['file']
    df = input_creator.get_df(file)
    # settings.file = file.name
    session['file'] = file.name
    # print(settings.file)
    # settings.df = df
    # settings.slotdict =
    session['df'] = df.to_json() #convert to json

    session['slotdict'] = {x: 1 for x in helpers.get_slots(df)}

    session.modified = True #make sure session updates

    return jsonify({'slotdict': settings.slotdict})

#-------------------------------------------------------------------------------

@app.route('/file/df', methods=['GET'])
def send_df():
    return jsonify({'slotdict': session['slotdict']})

@app.route('/slotdict', methods=['POST'])
def get_Userslots():
    data = request.get_json()
    slotdict = data['slotdict']
    # print(slotdict)
    for slot in slotdict:
        if slotdict[slot] == None:
            slotdict[slot] = 1
        else:
            slotdict[slot] = int(slotdict[slot])
    # settings.slotdict = slotdict
    session['slotdict'] = slotdict
    # settings.duration = int(data['duration'])
    session['duration'] = int(data['duration'])

    session.modified = True #make sure session updates
    # print(settings.slotdict)
    return jsonify({'slotdict': settings.slotdict})

#-------------------------------------------------------------------------------

@app.route('/basic', methods = ['POST'])
def get_Basic():
    data = request.get_json()
    # settings.weightdict = input_creator.convert_userWeights(data['weightdict'])
    session['weightdict'] = input_creator.convert_userWeights(data['weightdict'])
    session.modified = True #make sure session updates

    # print(settings.weightdict)
    return jsonify({'weightdict': settings.weightdict})

#-------------------------------------------------------------------------------

@app.route('/slots', methods = ['GET'])
def get_Slots():
    # slots = list(settings.slotdict.keys())
    for item in session:
        print('session: ', item)


    slots = list(session['slotdict'].keys())
    # print(slots)
    return jsonify(slots)

#-------------------------------------------------------------------------------

@app.route('/advanced', methods = ['POST'])
def get_Advanced():
    data = request.get_json()
    # settings.min_exp = int(data['min_exp'])
    # settings.min_skill = int(data['min_skill'])
    # settings.stress_slots = data['stress_slots']
    # settings.target_delta = int(data['target_delta'])
    # settings.flex_shifts = int(data['flex_shifts'])

    session['min_exp'] = int(data['min_exp'])
    session['min_skill'] = int(data['min_skill'])
    session['stress_slots'] = data['stress_slots']
    session['target_delta'] = int(data['target_delta'])
    session['flex_shifts'] = int(data['flex_shifts'])
    session.modified = True #make sure session updates

    resp = {
    'min_exp': session['min_exp'],
    'min_skill': session['min_skill'],
    'stress_slots': session['stress_slots'],
    'target_delta': session['target_delta'],
    'flex_shifts': session['flex_shifts']
    }
    # print(resp)

    return jsonify(resp)

#-------------------------------------------------------------------------------

@app.route('/results', methods=['GET'])
def display_results():

    file = session['file']
    df = pd.read_json(session['df']) #convert back to df
    slotdict = session['slotdict']
    weightdict = session['weightdict']
    duration = session['duration']
    min_exp = session['min_exp']
    min_skill = session['min_skill']
    stress_slots = session['stress_slots']
    target_delta = session['target_delta']
    flex_shifts = session['flex_shifts']

    default_input = [file, df, slotdict, duration]
    # print(default_input)
    advanced_input = [weightdict, min_exp, min_skill, stress_slots, target_delta, flex_shifts]
    # print(advanced_input)
    cleaned_input = input_creator.process_input(default_input, advanced_input)
    output_data = default_run.run(cleaned_input)

    # // props.df: [headers, rows]
    #   // headers: [col headers]
    #   // rows: {index: list(values)}
    # print(output_data['df'])
    outdf = output_data['df'].astype(dtype=str)
    headers = list(outdf.columns)
    rows = {str(i): list(outdf.iloc[i]) for i in outdf.index}
    # print(headers)
    # print(rows)
    output_data['df'] = [headers, rows]
    return(jsonify(output_data))

#-------------------------------------------------------------------------------

if __name__ == '__main__':
    app.run(host='0.0.0.0', debug=False, port=os.environ.get('PORT', 80))
    # host='0.0.0.0', port=5000, debug=False
