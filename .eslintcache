[{"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/index.js":"1","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/App.js":"2","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/reportWebVitals.js":"3","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/Form.js":"4","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/FileLoad.js":"5","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/Results.js":"6","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/BasicForm.js":"7","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/AdvancedForm.js":"8"},{"size":500,"mtime":1608751326000,"results":"9","hashOfConfig":"10"},{"size":6026,"mtime":1609561996000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1608751326000,"results":"12","hashOfConfig":"10"},{"size":6360,"mtime":1609381784000,"results":"13","hashOfConfig":"10"},{"size":4519,"mtime":1609454647000,"results":"14","hashOfConfig":"10"},{"size":2539,"mtime":1609564007000,"results":"15","hashOfConfig":"10"},{"size":6538,"mtime":1609556719000,"results":"16","hashOfConfig":"10"},{"size":5408,"mtime":1609556722000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1oq7afz",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/index.js",[],["37","38"],"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/App.js",[],"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/reportWebVitals.js",[],"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/Form.js",["39"],"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/FileLoad.js",["40","41"],"import React from 'react';\nimport axios from \"axios\";\nimport {Button, Form, Accordion, Card, Row, Col} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n\n\n\nfunction SlotNum(props) {\n  return(\n    <div class=\"col-xs-1\">\n    <Form.Row>\n      <li>\n      <Form.Label>{props.slot}</Form.Label>\n      <Form.Control\n      required\n      type=\"number\"\n      min=\"1\"\n      onChange={(e) => props.onChange(props.slot, e.target.value)}\n      defaultValue={props.value}\n      />\n      <Form.Control.Feedback type=\"invalid\">\n        Please provide a valid integer.\n      </Form.Control.Feedback>\n      </li>\n    </Form.Row>\n    </div>\n  );\n\n}\n\n\nclass FileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      slotdict: {\"Mo_1900\" : 0, \"Mo_2100\" : 0,\"Tu_1900\" : 0, \"Tu_2100\" : 0,\"We_1900\" : 0, \"We_2100\" : 0,\"Th_1900\" : 0, \"Th_2100\" : 0,\"Fr_1900\" : 0, \"Fr_2100\" : 0,\"Sa_1500\" : 0, \"Sa_1600\" : 0,\"Sa_1700\" : 0,\"Su_1700\" : 0,\"Su_1800\" : 0,\"Su_1900\" : 0,\"Su_2000\" : 0, \"Su_2100\" : 0},\n      hideSlots: true,\n      duration: 120,\n      validated: false,\n      hideSubmitButton: true\n  };\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n    this.handleDurationChange = this.handleDurationChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    var self = this;\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      console.log(\"invalid form\");\n      }\n\n    self.setState({\n      validated: true,\n    });\n    var data = {\n      slotdict: this.state.slotdict,\n      duration: this.state.duration\n    };\n    axios.post('/slotdict', data).then(res => { // then print response status\n            console.warn(res);\n        });\n  }\n\n  handleSlotChange(slot, value) {\n    const newSlotDict = {};\n    Object.assign(newSlotDict, this.state.slotdict);\n    newSlotDict[slot] = value;\n    this.setState({slotdict: newSlotDict});\n    // console.log(newSlotDict)\n  }\n  handleDurationChange(slot, value){\n    this.setState({duration: value})\n  }\n\n  handleFileChange(event) {\n    const target = event.target;\n    const value = target.value;\n    this.setState({\n      file: value,\n      hideSubmitButton: false,\n      hideSlots: false\n    });\n    this.fetchData();\n    // console.log(this.state.slotdict);\n    event.preventDefault();\n  }\n\n  fetchData(){\n\n    var self = this;\n    var data = {file: this.state.file};\n\n    axios.post('/file', data)\n    .then(res => { // then print response status\n        console.warn(res);\n        axios.get('/file/df').then(\n        (response) => {\n            console.log(response.data.slotdict);\n            self.setState({\n              slotdict: response.data.slotdict,\n              validated: true\n            })}\n            // console.log(response.data.slots);\n        ,\n        (error) => {\n            self.setState({error})\n          })\n    })\n\n    }\n\n\n  render() {\n    var slotList = Object.keys(this.state.slotdict).map((slot) =>\n    <li key={slot}>\n    <SlotNum\n    slot={slot}\n    onChange={this.handleSlotChange}\n    value={this.state.slotdict[slot]}\n    />\n    </li>\n  );\n\n    return (\n      <div id = \"fileForm\">\n      <Accordion defaultActiveKey=\"0\">\n      <Card>\n        <Accordion.Collapse eventKey=\"0\">\n\n          <Card.Body>\n              <Form.File\n                id=\"exampleFormControlFile1\"\n                label=\"\"\n                width =\"60\"\n                onChange={this.handleFileChange}/>\n              <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n            <SlotNum\n                slot= \"Slot Duration in Mins\"\n                onChange= {this.handleDurationChange}\n                value= {this.state.duration}/>\n              <div hidden={this.state.hideSlots}>\n                Select Number of TA's in each slot:\n                <ul> {slotList} </ul>\n              </div>\n            </Form>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          <Accordion.Toggle as={Button} type=\"submit\" onClick={this.handleSubmit} disabled={this.state.hideSubmitButton} eventKey=\"0\">\n            Submit Part 1\n          </Accordion.Toggle>\n        </Card.Footer>\n      </Card>\n      </Accordion>\n      </div>\n    );\n  }\n}\n\nexport {FileForm};\n","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/Results.js",["42","43","44","45","46","47","48"],"/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/BasicForm.js",["49"],"import React, {useState, setState} from 'react';\nimport axios from \"axios\";\nimport {Button, Form, Row, Col, Modal} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n\nfunction Radio(props) {\n  return (\n    <>\n    <Form.Check\n    inline label={props.value}\n    type='radio' id={`inline-radio`}\n    name={props.type}\n    onClick={props.onClick}\n    defaultChecked={props.defaultValue}\n    />\n    </>\n  )\n}\n\nclass Question extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      value: props.value,\n      defaultValue: props.defaultValue\n    };\n  }\n\n  renderRadio(i, isChecked) {\n    return(\n        <Radio\n          type = {this.props.name}\n          value= {i}\n          onClick={() => this.props.handleClick(this.props.name,i)}\n          defaultValue={isChecked}\n        />\n      );\n    }\n  render() {\n    var isChecked = Array(5).fill(false);\n    isChecked[this.state.defaultValue - 1] = true;\n    return(\n      <div>\n        {this.renderRadio('1', isChecked[0])}\n        {this.renderRadio('2', isChecked[1])}\n        {this.renderRadio('3', isChecked[2])}\n        {this.renderRadio('4', isChecked[3])}\n        {this.renderRadio('5', isChecked[4])}\n        {this.renderRadio('6', isChecked[5])}\n      </div>\n    )\n  }\n\n}\n\n\nclass BasicForm extends React.Component {\n  constructor(props){\n  super(props);\n  this.handleClick = this.handleClick.bind(this);\n  this.handleShow = this.handleShow.bind(this);\n  this.handleClose = this.handleClose.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n\n  this.state = {\n    slots: props.slots,\n    avail : 4,\n    slot_type: 6,\n    no_1: 4,\n    guarantee_shift : 5,\n    shift_cap : 3,\n    equality: 2,\n    show: false\n    };\n\n\n  }\n  handleClick(name, value){\n    var self = this;\n    // console.log(this.state[name])\n    self.setState({\n      [name] : value\n    });\n    console.log(name + \" updated to \" + value);\n    // console.log(this.state[name])\n  }\n\n  handleShow(){\n    var self = this;\n    self.setState({\n      show: true\n    })\n  }\n\n  handleClose(){\n    var self = this;\n    self.setState({\n      show: false\n    })\n  }\n\n  handleSubmit(){\n    var self = this;\n    const data={\n      weightdict: {\n        avail: this.state.avail,\n        slot_type: this.state.slot_type,\n        no_1: this.state.no_1,\n        guarantee_shift : this.state.guarantee_shift,\n        shift_cap : this.state.shift_cap,\n        equality: this.state.equality,\n      }\n    }\n    axios.post('/basic',data).then(res => { // then print response status\n            console.warn(res);\n        })\n    self.setState({\n      show: false\n    })\n\n  }\n\n  renderQuestion(name, val){\n    return (\n      <Question\n      name={name}\n      value={val}\n      handleClick={this.handleClick}\n      defaultValue={this.state[name]}\n      />\n  )}\n\n  render(){\n    return(\n    <div className=\"mb-3\">\n    <Button variant=\"primary\" onClick={this.handleShow}>\n      Select Basic Settings\n    </Button>\n\n    <Modal\n      size=\"lg\"\n      show={this.state.show}\n      onHide={this.handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Basic Settings (defaults were settings used in 2019)</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            It is essential that students who listed more availabilities get\n            preference over students who listed fewer availabilities.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('avail', this.state['avail'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            It is essential that students get their desired slot type (2hr vs 4hr).\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('slot_type', this.state['slot_type'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            It is essential that no student gets placed in a slot that they reported as a 1\n            (can work at this time if I am absolutely needed to).\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('no_1', this.state['no_1'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            It is essential that every student is guaranteed to get at least 1 shift.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('guarantee_shift', this.state['guarantee_shift'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            Students who have higher caps on the number of shifts they want to work\n            should be prioritized.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('shift_cap', this.state['shift_cap'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"basicQues\">\n            The number of shifts that each students gets should be distributed as evenly\n            as possible.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('equality', this.state['equality'])}\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n        variant=\"primary\"\n        onClick={this.handleSubmit}\n        >Confirm</Button>\n      </Modal.Footer>\n    </Modal>\n    </div>\n  )}\n}\nfunction AdvancedForm() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Select Advanced Settings\n      </Button>\n\n      <Modal\n        size = \"lg\"\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Advanced Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\">Confirm</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport {BasicForm, AdvancedForm};\n","/Users/aaronlichtblau/Desktop/Projects/lab-scheduler/src/AdvancedForm.js",["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":34},{"ruleId":"56","severity":1,"message":"60","line":3,"column":40,"nodeType":"58","messageId":"59","endLine":3,"endColumn":43},{"ruleId":"56","severity":1,"message":"61","line":3,"column":45,"nodeType":"58","messageId":"59","endLine":3,"endColumn":48},{"ruleId":"56","severity":1,"message":"62","line":3,"column":16,"nodeType":"58","messageId":"59","endLine":3,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":3,"column":27,"nodeType":"58","messageId":"59","endLine":3,"endColumn":30},{"ruleId":"56","severity":1,"message":"61","line":3,"column":32,"nodeType":"58","messageId":"59","endLine":3,"endColumn":35},{"ruleId":"63","severity":1,"message":"64","line":44,"column":11,"nodeType":"65","messageId":"66","endLine":44,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":45,"column":11,"nodeType":"65","messageId":"66","endLine":45,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":46,"column":11,"nodeType":"65","messageId":"66","endLine":46,"endColumn":13},{"ruleId":"63","severity":1,"message":"67","line":57,"column":16,"nodeType":"65","messageId":"66","endLine":57,"endColumn":18},{"ruleId":"56","severity":1,"message":"57","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":34},{"ruleId":"56","severity":1,"message":"68","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":1,"column":26,"nodeType":"58","messageId":"59","endLine":1,"endColumn":34},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]