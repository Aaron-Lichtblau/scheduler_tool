{"version":3,"sources":["logo.svg","FileLoad.js","Results.js","BasicForm.js","AdvancedForm.js","App.js","reportWebVitals.js","index.js"],"names":["SlotNum","props","class","Form","Row","Label","slot","Control","required","type","min","onChange","e","target","value","defaultValue","Feedback","FileForm","state","file","slotdict","hideSlots","duration","validated","hideSubmitButton","handleFileChange","bind","handleSubmit","handleSlotChange","handleDurationChange","event","currentTarget","checkValidity","preventDefault","stopPropagation","console","log","this","setState","data","axios","post","then","res","warn","newSlotDict","Object","assign","files","fetchData","path","self","get","response","error","slotList","keys","map","id","Accordion","defaultActiveKey","Card","Collapse","eventKey","Body","File","label","width","accept","noValidate","onSubmit","hidden","Footer","Toggle","as","Button","onClick","disabled","React","Component","Stats","statConversion","body","stats","header","style","color","toString","Table","striped","bordered","hover","responsive","TableRow","values","val","backColor","textColor","backgroundColor","CreateEntry","DataFrame","df","splice","cols","rows","headers","index","Radio","Check","inline","name","defaultChecked","Question","i","isChecked","handleClick","Array","fill","renderRadio","BasicForm","handleShow","handleClose","slots","avail","slot_type","no_1","guarantee_shift","shift_cap","equality","show","weightdict","className","variant","Modal","size","onHide","backdrop","keyboard","Header","closeButton","Title","Col","xs","md","renderQuestion","AdvancedForm","getSlots","min_exp","min_skill","stress_slots","target_delta","flex_shifts","options","Badge","App","resSection","createRef","schedule","hideResults","hideSpinner","hideInfeasible","ref","current","scrollIntoView","behavior","block","resp","result","JSON","stringify","scrollTo","hrStyle","Navbar","bg","expand","Brand","href","alt","src","logo","height","aria-controls","Nav","Link","Container","sm","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e87cd4ee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport axios from \"axios\";\nimport {Button, Form, Accordion, Card} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n\n\n\nfunction SlotNum(props) {\n  return(\n    <div class=\"col-xs-1\">\n    <Form.Row>\n      <li>\n      <Form.Label>{props.slot}</Form.Label>\n      <Form.Control\n      required\n      type=\"number\"\n      min=\"1\"\n      onChange={(e) => props.onChange(props.slot, e.target.value)}\n      defaultValue={props.value}\n      />\n      <Form.Control.Feedback type=\"invalid\">\n        Please provide a valid integer.\n      </Form.Control.Feedback>\n      </li>\n    </Form.Row>\n    </div>\n  );\n\n}\n\n\nclass FileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: '',\n      slotdict: {\"Mo_1900\" : 0, \"Mo_2100\" : 0,\"Tu_1900\" : 0, \"Tu_2100\" : 0,\"We_1900\" : 0, \"We_2100\" : 0,\"Th_1900\" : 0, \"Th_2100\" : 0,\"Fr_1900\" : 0, \"Fr_2100\" : 0,\"Sa_1500\" : 0, \"Sa_1600\" : 0,\"Sa_1700\" : 0,\"Su_1700\" : 0,\"Su_1800\" : 0,\"Su_1900\" : 0,\"Su_2000\" : 0, \"Su_2100\" : 0},\n      hideSlots: true,\n      duration: 120,\n      validated: false,\n      hideSubmitButton: true\n  };\n    this.handleFileChange = this.handleFileChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSlotChange = this.handleSlotChange.bind(this);\n    this.handleDurationChange = this.handleDurationChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    var self = this;\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      console.log(\"invalid form\");\n      }\n\n    self.setState({\n      validated: true,\n    });\n    var data = {\n      slotdict: this.state.slotdict,\n      duration: this.state.duration\n    };\n    axios.post('/slotdict', data).then(res => { // then print response status\n            console.warn(res);\n        });\n  }\n\n  handleSlotChange(slot, value) {\n    const newSlotDict = {};\n    Object.assign(newSlotDict, this.state.slotdict);\n    newSlotDict[slot] = value;\n    this.setState({slotdict: newSlotDict});\n    // console.log(newSlotDict)\n  }\n  handleDurationChange(slot, value){\n    this.setState({duration: value})\n  }\n\n  handleFileChange(event) {\n    const target = event.target;\n    const value = target.files[0];\n    console.log(value);\n\n    this.setState({\n      file: value,\n      hideSubmitButton: false,\n      hideSlots: false\n    });\n    this.fetchData(value);\n\n    event.preventDefault();\n  }\n\n  fetchData(path){\n\n    var self = this;\n    var data = {file: path};\n\n    axios.post('/file', data)\n    .then(res => { // then print response status\n        console.warn(res);\n        axios.get('/file/df').then(\n        (response) => {\n            console.log(response.data.slotdict);\n            self.setState({\n              slotdict: response.data.slotdict,\n              validated: true\n            })}\n            // console.log(response.data.slots);\n        ,\n        (error) => {\n            self.setState({error})\n          })\n    })\n\n    }\n\n\n  render() {\n    var slotList = Object.keys(this.state.slotdict).map((slot) =>\n    <li key={slot}>\n    <SlotNum\n    slot={slot}\n    onChange={this.handleSlotChange}\n    value={this.state.slotdict[slot]}\n    />\n    </li>\n  );\n\n    return (\n      <div id = \"fileForm\">\n      <Accordion defaultActiveKey=\"0\">\n      <Card>\n        <Accordion.Collapse eventKey=\"0\">\n\n          <Card.Body>\n              <Form.File\n                id=\"exampleFormControlFile1\"\n                label=\"\"\n                width =\"60\"\n                accept=\".csv\"\n                onChange={this.handleFileChange}/>\n              <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\n            <SlotNum\n                slot= \"Slot Duration in Mins\"\n                onChange= {this.handleDurationChange}\n                value= {this.state.duration}/>\n              <div hidden={this.state.hideSlots}>\n                Select Number of TA's in each slot:\n                <ul> {slotList} </ul>\n              </div>\n            </Form>\n          </Card.Body>\n        </Accordion.Collapse>\n        <Card.Footer>\n          <Accordion.Toggle as={Button} type=\"submit\" onClick={this.handleSubmit} disabled={this.state.hideSubmitButton} eventKey=\"0\">\n            Submit Part 1\n          </Accordion.Toggle>\n        </Card.Footer>\n      </Card>\n      </Accordion>\n      </div>\n    );\n  }\n}\n\nexport {FileForm};\n","import './App.css';\nimport React from 'react';\nimport {Table} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\nfunction Stats(props){\n    // console.log(props.stats);\n    // console.log(headers);\n    var statConversion = {\n      \"avg hap\":\"average happiness\",\n      \"std dev of hap\":\"standard deviation of students' happiness\",\n      \"min hap stud outliers\":\"Unhappy student outliers\",\n      \"avail to hap corr\":\"Correlation of students' availability to happiness\",\n      \"skill to hap corr\":\"Correlation of students' skill to happiness\",\n      \"experience to hap corr\":\"Correlation of students' experience to happiness\",\n      \"studs who got 1s\":\"Students who got 1's\",\n      \"studs without shift\":\"Students without a shift\",\n      \"wrong shift type studs\":\"Students who got the wrong type of shift (2hr vs. 4hr)\"\n    };\n    var body = Object.keys(props.stats).map((header) =>\n    <tr>\n      <th style={{color:\"white\"}}> {statConversion[header]} </th>\n        <td style={{color:\"white\"}}> {props.stats[header].toString()} </td>\n    </tr>);\n    return(\n      <Table striped bordered hover responsive=\"inline-flex\">\n    <thead>\n    </thead>\n      <tbody>\n      {body}\n      </tbody>\n  </Table>\n  );\n}\n\nfunction TableRow(props) {\n  const entries = props.values.map((val) => CreateEntry(val));\n  return entries;\n}\nfunction CreateEntry(val){\n  var backColor = null;\n  var textColor = 'white';\n  if (val === '-1'){backColor = '#D00000'};\n  if (val === '-2'){backColor = '#FFD000'; textColor = 'black'};\n  if (val === '-3'){backColor = '#00A86B'};\n  const entry = <td style={{color:textColor, backgroundColor: backColor}}> {val} </td>;\n  return entry;\n}\n\n// props.df: [headers, rows]\n  // headers: [col headers]\n  // rows: {index: list(values)}\nfunction DataFrame(props){\n  const df = props.df;\n  console.log(df);\n  if (df[0][0] !== 'Index') {df[0].splice(0,0,'Index');}\n\n  const cols = df[0];\n  console.log(cols);\n  const rows = df[1];\n  console.log(rows);\n  const headers = cols.map(header => <th style={{color:\"white\"}}>{header}</th>);\n  console.log(headers);\n  var body = Object.keys(rows).map((index) =>\n  <tr>\n    <th style={{color:\"white\"}}> {index} </th>\n      <TableRow values={rows[index]} />\n  </tr>\n);\n\n  return(\n    <Table striped bordered hover responsive=\"inline-flex\">\n  <thead>\n  <tr> {headers}\n  </tr>\n  </thead>\n    <tbody>\n      {body}\n    </tbody>\n</Table>\n  );\n};\n\n\n\n\nexport {DataFrame, Stats};\n","import React, {useState} from 'react';\nimport axios from \"axios\";\nimport {Button, Form, Row, Col, Modal} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n\nfunction Radio(props) {\n  return (\n    <>\n    <Form.Check\n    inline label={props.value}\n    type='radio' id={`inline-radio`}\n    name={props.type}\n    onClick={props.onClick}\n    defaultChecked={props.defaultValue}\n    />\n    </>\n  )\n}\n\nclass Question extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      value: props.value,\n      defaultValue: props.defaultValue\n    };\n  }\n\n  renderRadio(i, isChecked) {\n    return(\n        <Radio\n          type = {this.props.name}\n          value= {i}\n          onClick={() => this.props.handleClick(this.props.name,i)}\n          defaultValue={isChecked}\n        />\n      );\n    }\n  render() {\n    var isChecked = Array(5).fill(false);\n    isChecked[this.state.defaultValue - 1] = true;\n    return(\n      <div>\n        {this.renderRadio('1', isChecked[0])}\n        {this.renderRadio('2', isChecked[1])}\n        {this.renderRadio('3', isChecked[2])}\n        {this.renderRadio('4', isChecked[3])}\n        {this.renderRadio('5', isChecked[4])}\n        {this.renderRadio('6', isChecked[5])}\n      </div>\n    )\n  }\n\n}\n\n\nclass BasicForm extends React.Component {\n  constructor(props){\n  super(props);\n  this.handleClick = this.handleClick.bind(this);\n  this.handleShow = this.handleShow.bind(this);\n  this.handleClose = this.handleClose.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n\n  this.state = {\n    slots: props.slots,\n    avail : 4,\n    slot_type: 6,\n    no_1: 4,\n    guarantee_shift : 5,\n    shift_cap : 3,\n    equality: 2,\n    show: false\n    };\n\n\n  }\n  handleClick(name, value){\n    var self = this;\n    // console.log(this.state[name])\n    self.setState({\n      [name] : value\n    });\n    console.log(name + \" updated to \" + value);\n    // console.log(this.state[name])\n  }\n\n  handleShow(){\n    var self = this;\n    self.setState({\n      show: true\n    })\n  }\n\n  handleClose(){\n    var self = this;\n    self.setState({\n      show: false\n    })\n  }\n\n  handleSubmit(){\n    var self = this;\n    const data={\n      weightdict: {\n        avail: this.state.avail,\n        slot_type: this.state.slot_type,\n        no_1: this.state.no_1,\n        guarantee_shift : this.state.guarantee_shift,\n        shift_cap : this.state.shift_cap,\n        equality: this.state.equality,\n      }\n    }\n    axios.post('/basic',data).then(res => { // then print response status\n            console.warn(res);\n        })\n    self.setState({\n      show: false\n    })\n\n  }\n\n  renderQuestion(name, val){\n    return (\n      <Question\n      name={name}\n      value={val}\n      handleClick={this.handleClick}\n      defaultValue={this.state[name]}\n      />\n  )}\n\n  render(){\n    return(\n    <div className=\"mb-3\">\n    <Button variant=\"primary\" onClick={this.handleShow}>\n      Select Basic Settings\n    </Button>\n\n    <Modal\n      size=\"lg\"\n      show={this.state.show}\n      onHide={this.handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Basic Settings (defaults were settings used in 2019)</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            It is essential that students who listed more availabilities get\n            preference over students who listed fewer availabilities.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('avail', this.state['avail'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            It is essential that students get their desired slot type (2hr vs 4hr).\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('slot_type', this.state['slot_type'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            It is essential that no student gets placed in a slot that they reported as a 1\n            (can work at this time if I am absolutely needed to).\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('no_1', this.state['no_1'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            It is essential that every student is guaranteed to get at least 1 shift.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('guarantee_shift', this.state['guarantee_shift'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            Students who have higher caps on the number of shifts they want to work\n            should be prioritized.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('shift_cap', this.state['shift_cap'])}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={7}>\n            <p className=\"modalQues\">\n            The number of shifts that each students gets should be distributed as evenly\n            as possible.\n            </p>\n          </Col>\n          <Col xs={6} md={5}>\n            {this.renderQuestion('equality', this.state['equality'])}\n          </Col>\n        </Row>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n        variant=\"primary\"\n        onClick={this.handleSubmit}\n        >Confirm</Button>\n      </Modal.Footer>\n    </Modal>\n    </div>\n  )}\n}\nfunction AdvancedForm() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Select Advanced Settings\n      </Button>\n\n      <Modal\n        size = \"lg\"\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Advanced Settings</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\">Confirm</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\n\nexport {BasicForm, AdvancedForm};\n","import React from 'react';\nimport axios from \"axios\";\nimport {Button, Form, Row, Col, Modal, Badge} from 'react-bootstrap';\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\nclass AdvancedForm extends React.Component {\n  constructor(props){\n  super(props);\n  this.handleClick = this.handleClick.bind(this);\n  this.handleShow = this.handleShow.bind(this);\n  this.handleClose = this.handleClose.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.getSlots = this.getSlots.bind(this);\n\n  this.state = {\n    min_exp: 1,\n    min_skill : 2,\n    stress_slots: [],\n    target_delta: 1,\n    flex_shifts : 3,\n    slots: ['dummy'],\n    show: false\n    };\n  }\n  getSlots(){\n    var self = this;\n    axios.get('/slots').then(\n    (response) => {\n        console.log(response.data);\n        self.setState({\n          slots: response.data,\n          show: true\n        });\n    }\n        // console.log(response.data.slots);\n    ,\n    (error) => {\n        self.setState({error})\n      })\n  }\n\n\n  handleClick(name, value){\n    var self = this;\n    // console.log(this.state[name])\n    self.setState({\n      [name] : value\n    });\n    console.log(name + \" updated to \" + value);\n    // console.log(this.state[name])\n  }\n\n  handleShow(){\n    var self = this;\n    self.getSlots();\n  }\n\n  handleClose(){\n    var self = this;\n    self.setState({\n      show: false\n    })\n  }\n\n  handleSubmit(){\n    var self = this;\n    const data={\n      min_exp: this.state.min_exp,\n      min_skill : this.state.min_skill,\n      stress_slots: this.state.stress_slots,\n      target_delta: this.state.target_delta,\n      flex_shifts : this.state.flex_shifts,\n    }\n    axios.post('/advanced',data).then(res => { // then print response status\n            console.warn(res);\n        })\n    self.setState({\n      show: false\n    })\n\n  }\n\n  renderQuestion(name){\n    return (\n      <Form.Control\n      type=\"number\"\n      min=\"0\"\n      onChange={(e) => this.handleClick(name, e.target.value)}\n      defaultValue={this.state[name]}\n      />\n  )}\n\n  render(){\n    console.log(this.state.slots);\n    return(\n    <div className=\"mb-3\">\n    <Button variant=\"primary\" onClick={this.handleShow}>\n      Select Advanced Settings\n    </Button>\n\n    <Modal\n      size=\"lg\"\n      show={this.state.show}\n      onHide={this.handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Advanced Settings (defaults were settings used in 2019)</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <h3>Adding Constraints</h3>\n      <p className=\"modalQues\">If there are certain slots which require more experienced or skilled TA's,\n      select those slots in the 'stress slots' selection below. Then, select the minimum number of\n      experienced and skilled TA's that you want to be guaranteed in each of these 'stress slots'.</p>\n      <Row>\n        <Col xs={12} md={8}>\n          <p className=\"modalQues\">\n          STRESS_SLOTS: slots which need especially strong TA's in them.\n          </p>\n        </Col>\n        <Col xs={6} md={4}>\n        <DropdownMultiselect\n          options={this.state.slots}\n          name=\"stress_slots\"\n        />\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs={12} md={8}>\n          <p className=\"modalQues\">\n          MIN EXP: minimum number of 'experienced' TA's in each stress slot.\n          </p>\n        </Col>\n        <Col xs={6} md={4}>\n          {this.renderQuestion('min_exp')}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs={12} md={8}>\n          <p className=\"modalQues\">\n          MIN SKILL: minimum number of 'skilled' TA's in each stress slot.\n          </p>\n        </Col>\n        <Col xs={6} md={4}>\n          {this.renderQuestion('min_skill')}\n        </Col>\n      </Row>\n\n\n      <h3>Relaxing Constraints <Badge variant=\"warning\">Recommended</Badge></h3>\n      <p className=\"modalQues\">If the scheduler is over constrained, it can be infeasible to create a schedule. By increasing the\n      parameters below, you relax the constraints to give the scheduler a better ability to perform optimally.</p>\n      <Row>\n        <Col xs={12} md={8}>\n          <p className=\"modalQues\">\n          TARGET DELTA: this is the acceptable number of TA's above your inputted slot sizes that the scheduler can assign.\n          For example, if: FR_1900 = 5 TA's and target delta = 2, the scheduler could assign up to 7 TA's in Fr_1900.\n          </p>\n        </Col>\n        <Col xs={6} md={4}>\n          {this.renderQuestion('target_delta')}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col xs={12} md={8}>\n          <p className=\"modalQues\">\n          FLEX_SHIFTS: this is the number of floating shifts which the scheduler can assign in any slot.\n          For example, if: flex shifts = 3, 3 extra shifts will be assigned throughout the schedule\n          (within the target delta).\n          </p>\n        </Col>\n        <Col xs={6} md={4}>\n          {this.renderQuestion('flex_shifts')}\n        </Col>\n      </Row>\n\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n        variant=\"primary\"\n        onClick={this.handleSubmit}\n        >Confirm</Button>\n      </Modal.Footer>\n    </Modal>\n    </div>\n  )}\n}\n\n\nexport {AdvancedForm};\n","import logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\";\nimport {FileForm} from './FileLoad.js';\nimport {DataFrame, Stats} from './Results.js';\nimport {BasicForm} from './BasicForm.js';\nimport {AdvancedForm} from './AdvancedForm.js';\nimport React from 'react';\nimport {Button, Nav, Navbar, Container, Row, Col, Form} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n<script src=\"https://unpkg.com/react/umd/react.production.min.js\" crossorigin></script>\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resSection = React.createRef();\n\n    this.state = {\n      schedule: null,\n      stats: {\"to be displayed\": \"stat data\"},\n      df: [[\"headers\"],{\"index\": [\"row\"]}],\n      hideResults: true,\n      hideSpinner: true,\n      hideInfeasible: true,\n    };\n  }\n\n  scrollTo(ref){\n    ref.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  }\n\n  handleSubmit(){\n    var self = this;\n    self.setState({hideSpinner: false});\n    axios.get('/results').then(\n    (resp) => {\n        console.log(resp.data);\n        var result = resp.data;\n        self.setState({\n          stats: result['stats'],\n          schedule: JSON.stringify(result['schedule']),\n          df: result['df'],\n          hideSpinner: true\n        });\n        if (result['stats']['avg hap'] > 100){\n          console.log('infeasible');\n          self.setState({hideInfeasible: false, hideResults:true})\n        }\n        else{\n          self.setState({hideResults:false, hideInfeasible:true})\n        }\n\n        this.scrollTo(self.resSection);\n      }\n    ,\n    (error) => {\n        self.setState({error})\n      }\n    )\n  }\n\n  render(){\n    const hrStyle = {\n      \"border-color\": 'black'\n    };\n\n    console.log(this.state.df);\n  return (\n    <div className=\"App\">\n    {/* a bunch of navbar bs that looks cool*/}\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">\n        <img\n          alt=\"\"\n          src={logo}\n          width=\"30\"\n          height=\"30\"\n          className=\"App-logo\"\n        />{' '}\n        Lab Scheduler\n      </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"navbar\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Home</Nav.Link>\n            <Nav.Link href=\"#about\">About</Nav.Link>\n          </Nav>\n          <Form inline className=\"welcomeText\">\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n      <br></br>\n      <br></br>\n\n\n      <Container>\n        <Row>\n        <Col sm></Col>\n        <Col md=\"auto\">\n        </Col>\n        <Col sm></Col>\n        </Row>\n        <Row>\n          <Col sm={5}>\n\n          <h3>Step 1: Upload time data\n          </h3>\n          <p>Download your spreadsheet of labTA's time preferences as a .csv file. Then,\n          upload your file by clicking \"choose file\". Make sure that your file is formatted correctly.\n          To see an example file, refer to:\n          <a href= \"https://github.com/Aaron-Lichtblau/scheduler_tool/blob/main/api/default_input.csv\"\n          target=\"_blank\"\n          rel=\"noreferrer\">\n           example csv\n          </a>\n          .\n\n          Then input the duration of time slots (default is 2 hours).\n\n          Lastly, input the desired number of TA's working in each slot.\n          </p>\n\n          </Col>\n          <Col sm={7}>\n            <FileForm/>\n          </Col>\n        </Row>\n        <br></br>\n        <hr style={hrStyle}></hr>\n        <br></br>\n        <Row>\n          <Col sm={5}>\n\n          <h3>Step 2: Select Basic Settings\n          </h3>\n          <p>Fill in the questions to set the basic settings for the scheduler tool to use.\n          The outputted schedule will be based on these preferences. Keep in mind that these preferences\n          are competing. Scores of 4 and above will be treated as strict preferences: adhered to in\n          all situations, unless there is a competing higher scored preference. Scores of 3 and below will\n          be treated as soft preferences: adhered to as bonuses.\n          </p>\n\n          </Col>\n          <Col sm={7}>\n            <BasicForm />\n          </Col>\n        </Row>\n        <br></br>\n        <hr style={hrStyle}></hr>\n        <br></br>\n        <Row>\n          <Col sm={5}>\n\n          <h3>Step 3: Select Advanced Settings (Optional)\n          </h3>\n          <p>Fill in the questions to set the advanced settings for the scheduler tool to use.\n          The outputted schedule will be based on these preferences. This is a good place to\n          adjust constraints on the scheduler.\n          </p>\n\n          </Col>\n          <Col sm={7}>\n            <AdvancedForm/>\n          </Col>\n        </Row>\n        <br></br>\n        <hr style={hrStyle}></hr>\n        <br></br>\n        <Row>\n          <Col>\n          </Col>\n          <Col>\n            <Button  variant=\"primary\" onClick={this.handleSubmit} size=\"lg\">\n            <img\n              alt=\"\"\n              src={logo}\n              width=\"30\"\n              height=\"30\"\n              className=\"App-logo2\"\n              hidden={this.state.hideSpinner}\n            />{' '}\n            Create a Schedule!</Button>\n            </Col>\n            <Col>\n            </Col>\n        </Row>\n        <br></br>\n        <br></br>\n\n        <div className=\"Infeasible\" hidden={this.state.hideInfeasible}>\n        <p> Something over-constrained the scheduler, please adjust settings </p>\n        </div>\n        <div className=\"Results\" hidden={this.state.hideResults} ref={this.resSection}>\n          <Row>\n            <h3> Your Schedule </h3>\n            <div class= \"container horizontal-scrollable\">\n            <DataFrame df={this.state.df}/>\n            </div>\n\n          </Row>\n          <br></br>\n          <Row>\n          <h3> Schedule Stats </h3>\n          <Stats\n          stats={this.state.stats}\n          />\n          </Row>\n          <br></br>\n          <Row>\n          <h3> Print Out of Schedule </h3>\n          <p> {this.state.schedule}</p>\n          </Row>\n        </div>\n      </Container>\n\n\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}